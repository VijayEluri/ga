package com.porpoise.ga;public class GeneticAlgorithm {    private final IChlorine chlorine;    public GeneticAlgorithm(final Probability probability) {        this(new ChlorineImpl(probability));    }    public GeneticAlgorithm(final float crossRate, final float mutationRate) {        this(new Probability(crossRate, mutationRate));    }    public GeneticAlgorithm() {        this(Probability.getInstance());    }    public GeneticAlgorithm(final IChlorine transform) {        chlorine = transform;    }    public Result solve(final IGenePool original) {        //        // our pool of available variations is available via the genePool        //        int generation = 0;        IGenePool pool = original;        while (!pool.hasSolution()) {            generation++;            pool = chlorine.evolve(pool);        }        return new Result(generation, pool);    }}